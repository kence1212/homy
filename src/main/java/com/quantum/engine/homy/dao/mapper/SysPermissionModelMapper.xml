<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantum.engine.homy.dao.SysPermissionModelMapper">
  <resultMap id="BaseResultMap" type="com.quantum.engine.homy.model.SysPermissionModel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="icon_class" jdbcType="VARCHAR" property="iconClass" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="modify_id" jdbcType="INTEGER" property="modifyId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BaseResultWithPNameMap" type="com.quantum.engine.homy.model.ext.SysPermissionModelExt">
  	<result column="pName" jdbcType="VARCHAR" property="parentName"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ListModelMap" type="com.quantum.engine.homy.model.ext.SysPermissionModelExt">
  	<collection property="childrenModels" column="id" ofType="com.quantum.engine.homy.model.ext.SysPermissionModelExt" 
  	select="com.quantum.engine.homy.dao.SysPermissionModelMapper.getChildModels"></collection>
  	<collection property="modelPermissions" column="id" ofType="com.quantum.engine.homy.model.ext.SysPermissionExt"
  	 select="com.quantum.engine.homy.dao.SysPermissionMapper.getByModelId"></collection>
  </resultMap>
 
 <select id="getModelList" resultMap="ListModelMap">
	SELECT * from sys_permission_model where pid is NULL 
 </select>
 <select id="getChildModels" parameterType="java.lang.Integer" resultMap="ListModelMap">
 	SELECT * from sys_permission_model WHERE pid = #{pid}
 </select>
 
  <sql id="Base_Column_List">
    id, name, code, pid, icon_class, create_time, create_id, modify_time, modify_id
  </sql>
  <select id="getList"  resultMap="BaseResultWithPNameMap">
    select 
    c.id, c.name, c.code, c.pid, c.icon_class, c.create_time, c.create_id, c.modify_time, c.modify_id,p.name as pName
    from sys_permission_model c 
    left join  sys_permission_model p on c.pid = p.id
    <if test="keyword != null">
    	where c.name like #{keyword} or p.name like #{keyword}
    </if>
    order by c.create_time desc
    <if test="pageNum > 0">
    	limit #{startIndex},#{pageSize}
    </if>
  </select>
  <select id="getTotalCount"  resultType="java.lang.Integer">
    select 
     count(*)
    from sys_permission_model c 
    left join  sys_permission_model p on c.pid = p.id
    <if test="keyword != null">
    	where c.name like #{keyword} or p.name like #{keyword}
    </if>
  </select>
  <select id="getAll"  resultMap="BaseResultWithPNameMap">
    select 
     c.id, c.name, c.code, c.pid, c.icon_class, c.create_time, c.create_id, c.modify_time, c.modify_id,p.name as pName
    from sys_permission_model c 
    left join  sys_permission_model p on c.pid = p.id
    order by c.create_time
  </select>
  
  <select id="selectByNameAndPid"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_permission_model
    where name = #{name}
    <if test="pid != null">
    	and pid = #{pid}
    </if>
    <if test="id != null">
    	and id != #{id}
    </if>
  </select>
  
  <select id="getTopPermissionModel" resultType="java.util.Map">
    select 
    id,name
    from sys_permission_model
    where code = 1
  </select>
  <select id="getSecondModel" parameterType="java.lang.Integer" resultType="java.util.Map">
    select 
    id,name
    from sys_permission_model
    where pid = #{pid} and code = 2
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_permission_model
    where name = #{modelName}
  </select>
 
  <select id="getPModels" parameterType="java.lang.Integer" resultType="java.util.Map">
    select 
   id,name
    from sys_permission_model
    <if test="id != null">
    	where id != #{id}
    </if>
  </select>
  <select id="getCountByPid" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
    select 
    count(*)
    from sys_permission_model
    where pid = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_permission_model
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_permission_model
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.quantum.engine.homy.model.SysPermissionModel">
    insert into sys_permission_model (id, name, code, 
      pid, icon_class, create_time, 
      create_id, modify_time, modify_id
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{iconClass,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=INTEGER}, #{modifyTime,jdbcType=TIMESTAMP}, #{modifyId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.quantum.engine.homy.model.SysPermissionModel">
    insert into sys_permission_model
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="iconClass != null">
        icon_class,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="modifyId != null">
        modify_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="iconClass != null">
        #{iconClass,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        #{modifyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quantum.engine.homy.model.SysPermissionModel">
    update sys_permission_model
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="iconClass != null">
        icon_class = #{iconClass,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        modify_id = #{modifyId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quantum.engine.homy.model.SysPermissionModel">
    update sys_permission_model
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      icon_class = #{iconClass,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>