<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantum.engine.homy.dao.BizGoodsBaseMapper">
	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache" /> -->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="BaseResultMap" type="com.quantum.engine.homy.model.BizGoodsBase">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
		<result column="goods_no" jdbcType="VARCHAR" property="goodsNo" />
		<result column="goods_type_number" jdbcType="VARCHAR" property="goodsTypeNumber" />
		<result column="goods_icon" jdbcType="VARCHAR" property="goodsIcon" />
		<result column="goods_desc" jdbcType="VARCHAR" property="goodsDesc" />
		<result column="have_3d" jdbcType="SMALLINT" property="have3d" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_id" jdbcType="INTEGER" property="createId" />
		<result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="modify_id" jdbcType="INTEGER" property="modifyId" />
		<result column="goods_category_id" jdbcType="INTEGER" property="goodsCategoryId" />
		<result column="goods_style_id" jdbcType="INTEGER" property="goodsStyleId" />
		<result column="brand_id" jdbcType="INTEGER" property="brandId" />
		<result column="goods_state" jdbcType="INTEGER" property="goodsState" />
		<result column="default_price" jdbcType="DOUBLE" property="defaultPrice" />
	</resultMap>
	<resultMap extends="BaseResultMap"  id="BizGoodsBaseExt" type="com.quantum.engine.homy.model.BizGoodsBase">
		<result column="goods_category_name" jdbcType="INTEGER" property="goodsCategoryName" />
		<result column="goods_style_name" jdbcType="INTEGER" property="goodsStyleName" />
		<result column="brand_name" jdbcType="INTEGER" property="brandName" />
	</resultMap>
	
	<resultMap id="BizGoodsBaseExtList" type="com.quantum.engine.homy.model.BizGoodsBase">
		<id column="b_id" jdbcType="INTEGER" property="id" />
		<result column="b_goods_name" jdbcType="VARCHAR" property="goodsName" />
		<result column="b_goods_no" jdbcType="VARCHAR" property="goodsNo" />
		<result column="b_goods_type_number" jdbcType="VARCHAR" property="goodsTypeNumber" />
		<result column="b_goods_icon" jdbcType="VARCHAR" property="goodsIcon" />
		<result column="b_goods_desc" jdbcType="VARCHAR" property="goodsDesc" />
		<result column="b_have_3d" jdbcType="SMALLINT" property="have3d" />
		<result column="b_create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="b_create_id" jdbcType="INTEGER" property="createId" />
		<result column="b_modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="b_modify_id" jdbcType="INTEGER" property="modifyId" />
		<result column="b_goods_category_id" jdbcType="INTEGER" property="goodsCategoryId" />
		<result column="b_goods_style_id" jdbcType="INTEGER" property="goodsStyleId" />
		<result column="b_brand_id" jdbcType="INTEGER" property="brandId" />
		<result column="b_goods_state" jdbcType="INTEGER" property="goodsState" />
		<result column="b_default_price" jdbcType="DOUBLE" property="defaultPrice" />
		<collection column="sizes" property="sizes" ofType="com.quantum.engine.homy.model.BizGoodsSize" >  
        	<id column="s_id" jdbcType="INTEGER" property="id" />
			<result column="s_goods_id" jdbcType="INTEGER" property="goodsId" />
			<result column="s_name" jdbcType="VARCHAR" property="name" />
			<result column="s_is_valid" jdbcType="SMALLINT" property="isValid" />
			<result column="s_create_time" jdbcType="TIMESTAMP" property="createTime" />
			<result column="s_create_id" jdbcType="INTEGER" property="createId" />
      	</collection>  
      	<collection column="colors" property="colors" ofType="com.quantum.engine.homy.model.BizGoodsColor" >  
        	<id column="c_id" jdbcType="INTEGER" property="id" />
			<result column="c_name" jdbcType="VARCHAR" property="name" />
			<result column="c_code" jdbcType="VARCHAR" property="code" />
			<result column="c_goods_id" jdbcType="INTEGER" property="goodsId" />
			<result column="c_create_time" jdbcType="TIMESTAMP" property="createTime" />
			<result column="c_create_id" jdbcType="INTEGER" property="createId" />
      	</collection>  
      	<collection column="textures" property="textures" ofType="com.quantum.engine.homy.model.BizGoodsTexture" >
      		<id column="t_id" jdbcType="INTEGER" property="id" />
			<result column="t_texture_name" jdbcType="VARCHAR" property="textureName" />
			<result column="t_texture_code" jdbcType="VARCHAR" property="textureCode" />
			<result column="t_goods_id" jdbcType="INTEGER" property="goodsId" />
			<result column="t_create_time" jdbcType="TIMESTAMP" property="createTime" />
			<result column="t_create_id" jdbcType="INTEGER" property="createId" />
			<result column="t_modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
			<result column="t_modify_id" jdbcType="INTEGER" property="modifyId" />
      	</collection>
      	<collection column="attrs" property="attrs" ofType="com.quantum.engine.homy.model.BizGoodsAttrExt" >
      		<id column="a_id" jdbcType="INTEGER" property="id" />
			<result column="a_goods_id" jdbcType="INTEGER" property="goodsId" />
			<result column="a_attr_name" jdbcType="VARCHAR" property="attrName" />
			<result column="a_attr_value" jdbcType="VARCHAR" property="attrValue" />
      	</collection>
      	<collection column="imgs" property="imgs" ofType="com.quantum.engine.homy.model.BasImage" >
      		<id column="i_id" jdbcType="INTEGER" property="id" />
			<result column="i_type" jdbcType="SMALLINT" property="type" />
			<result column="i_image_path" jdbcType="VARCHAR" property="imagePath" />
			<result column="i_image_size" jdbcType="BIGINT" property="imageSize" />
			<result column="i_suffix" jdbcType="VARCHAR" property="suffix" />
			<result column="i_create_time" jdbcType="TIMESTAMP" property="createTime" />
			<result column="i_create_id" jdbcType="INTEGER" property="createId" />
			<result column="i_goods_id" jdbcType="INTEGER" property="goodsId" />
      	</collection>
	</resultMap>
	
	<sql id="Contact_All_Column_List">
		bgb.id as b_id, 
		bgb.goods_name as b_goods_name, 
		bgb.goods_no as b_goods_no, 
		bgb.goods_type_number as b_goods_type_number, 
		bgb.goods_icon as b_goods_icon, 
		bgb.have_3d as have_3d,
		bgb.create_time as b_create_time, 
		bgb.create_id as b_create_id,
		bgb.modify_time as b_modify_time, 
		bgb.modify_id as b_modify_id, 
		bgb.goods_category_id as b_goods_category_id, 
		bgb.goods_style_id as b_goods_style_id, 
		bgb.goods_state as b_goods_state, 
		bgb.default_price as b_default_price , 
		bgb.brand_id as b_brand_id,
		bgb.goods_desc as b_goods_desc,
		bgs.id as s_id, 
		bgs.goods_id as s_goods_id, 
		bgs.name as s_name, 
		bgs.is_valid as s_is_valid, 
		bgs.create_time as s_create_time, 
		bgs.create_id as s_create_id,
		bgc.id as c_id, 
		bgc.name as c_name, 
		bgc.code as c_code, 
		bgc.goods_id as c_goods_id, 
		bgc.create_time as c_create_time, 
		bgc.create_id as c_create_id,
		bgt.id as t_id, 
		bgt.texture_name as t_texture_name, 
		bgt.texture_code as t_texture_code, 
		bgt.goods_id as t_goods_id, 
		bgt.create_time as t_create_time, 
		bgt.create_id as t_create_id,
		bgt.modify_time as t_modify_time, 
		bgt.modify_id as t_modify_id,
		bga.id as a_id, 
		bga.goods_id as a_goods_id, 
		bga.attr_name as a_attr_name, 
		bga.attr_value as a_attr_value,
		bgi.id as i_id, 
		bgi.type as i_type, 
		bgi.image_path as i_image_path, 
		bgi.image_size as i_image_size, 
		bgi.suffix as i_suffix, 
		bgi.create_time as i_create_time, 
		bgi.create_id as i_create_id , 
		bgi.goods_id as i_goods_id
	</sql>
	
	<sql id="Base_Column_List">
		id, goods_name, goods_no, goods_type_number, goods_icon, have_3d,
		create_time, create_id,
		modify_time, modify_id, goods_category_id, goods_style_id, 
		goods_state, default_price , brand_id , goods_desc
	
	</sql>
	
	<select id="getByGoodsIdAndCityId" resultType="com.quantum.engine.homy.model.result.GoodsListItemResult" >
		select 
		bgb.id as goodsId, 
		bgb.goods_name as goodsName,
		bgb.goods_icon as goodsIcon,
		bgb.goods_desc as goodsDesc,
		min(bgss.price) as minPrice ,
		max(bgss.price) as maxPrice 
		from  biz_goods_base bgb
		left join biz_goods_sku bgs on bgb.id = bgs.goods_id
		left join biz_goods_sku_stock bgss on bgs.id = bgss.sku_id 
		where bgb.id = #{goodsId} and bgss.city_id = #{cityId}
	</select>
	
	<select id="getDetailById" parameterType="int" resultMap="BizGoodsBaseExtList">
		select 
		<include refid="Contact_All_Column_List" />
		from 
		biz_goods_base bgb
		left join biz_goods_size bgs on bgs.goods_id = bgb.id
		left join biz_goods_color bgc on bgc.goods_id = bgb.id
		left join biz_goods_texture bgt on bgt.goods_id = bgb.id
		left join biz_goods_attr_ext bga on bga.goods_id = bgb.id
		left join bas_image bgi on bgi.goods_id = bgb.id
		where bgb.id = #{goodsId}
	</select>
	
	<select id="searchAsso" resultType="string">
		select goods_name from biz_goods_base where goods_name like "%${searchStr}%"
		limit 0,10
	</select>
	
	<select id="getGoodsNameByOrderIds" resultType="string" parameterType="java.util.List">
		select bgb.goods_name from biz_goods_base bgb
		where bgb.id in (
			select DISTINCT goods_id from biz_order_item boi where boi.order_id in 
			<foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
	            #{item}  
			</foreach>
		) 
	</select>
	
	<select id="list" resultMap="BizGoodsBaseExt" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		, 
		(select style_name from biz_goods_style bgs where bgs.id = bgb.goods_style_id) as goods_style_name,
		(select category_name from biz_goods_category bgc where bgc.id = bgb.goods_category_id) as goods_category_name,
		(select brand_name from bas_goods_brand bgbr where bgbr.brand_id = bgb.brand_id) as brand_name
		from biz_goods_base bgb
		<where>
			<if test="brandId !=null and brandId !=''">  
                 AND brand_id = #{brandId}  
            </if> 
            <if test="goodsCategoryId != null and goodsCategoryId !=''">  
                 AND goods_category_id = #{goodsCategoryId}  
            </if> 
            <if test="goodsStyleId !=null and goodsStyleId !=''">  
                 AND goods_style_id = #{goodsStyleId}  
            </if> 
            <if test="have3d !=null and have3d !=''">  
                 AND have_3d = #{have3d}  
            </if> 
            <if test="key !=null and key !=''">  
                 AND goods_name LIKE concat(concat('%',#{key}),'%')
            </if> 
		</where>
		<if test="page > -1">
			limit #{page},#{pageSize}
		</if>
	</select>
	
	<select id="search" resultType="com.quantum.engine.homy.model.result.GoodsListItemResult" parameterType="java.util.Map">
		select 
		bgb.id as goodsId, 
		bgb.goods_name as goodsName,
		bgb.goods_icon as goodsIcon,
		bgb.goods_desc as goodsDesc,
		min(bgss.price) as minPrice ,
		max(bgss.price) as maxPrice 
		from  biz_goods_base bgb
		left join biz_goods_sku bgs on bgb.id = bgs.goods_id
		left join biz_goods_sku_stock bgss on bgs.id = bgss.sku_id 
		where 1 = 1
		<if test="styleId != null and styleId !=''">
			and bgb.goods_style_id = #{styleId}
		</if>
		<if test="categoryId != null and categoryId !=''">
			and bgb.goods_category_id = #{categoryId}
		</if>
		<if test="brandId != null and brandId !=''">
			and bgb.brand_id = #{brandId}
		</if>
		<if test="cityId != null and cityId !=''">
			and bgss.city_id = #{cityId}
		</if>
		<if test="goodsState != null and goodsState !=''">
			and bgb.goods_state = #{goodsState}
		</if>
		<if test="key != null and key !=''">
			and bgb.goods_name LIKE concat(concat('%',#{key}),'%')
		</if>
		<if test="brandCategoryId != null and brandCategoryId !=''">
			and bgb.goods_category_id  in ( select id from biz_goods_category where id = #{brandCategoryId} or pid = #{brandCategoryId} ) 
		</if>
		<if test="texture != null and texture !=''">
			and bgb.id  in ( select DISTINCT goods_id from biz_goods_texture where texture_name = #{texture} ) 
		</if>
		group by bgb.id  having minprice &gt; 0
		<if test="minPrice != null and minPrice !=''">
			and maxprice &gt;= #{minPrice}
		</if>
		<if test="maxPrice != null and maxPrice !=''">
			and minprice &lt;= #{maxPrice}
		</if>
		<if test="orderby != null and orderby !=''">
			order by ${orderby}	
		</if>
		limit #{pageNum},#{pageSize}
	</select>
	
	<select id="searchGoodsTexture" resultType="string" parameterType="java.util.Map">
		select 
		texture_name
		from  biz_goods_texture
		where goods_id in ( select goodsId from 
			(
			select 
			bgb.id as goodsId, 
			bgb.goods_name as goodsName,
			bgb.goods_icon as goodsIcon,
			bgb.goods_desc as goodsDesc,
			min(bgss.price) as minPrice ,
			max(bgss.price) as maxPrice 
			from  biz_goods_base bgb
			left join biz_goods_sku bgs on bgb.id = bgs.goods_id
			left join biz_goods_sku_stock bgss on bgs.id = bgss.sku_id 
			where 1 = 1
			<if test="styleId != null and styleId !=''">
				and bgb.goods_style_id = #{styleId}
			</if>
			<if test="categoryId != null and categoryId !=''">
				and bgb.goods_category_id = #{categoryId}
			</if>
			<if test="brandId != null and brandId !=''">
				and bgb.brand_id = #{brandId}
			</if>
			<if test="cityId != null and cityId !=''">
				and bgss.city_id = #{cityId}
			</if>
			<if test="goodsState != null and goodsState !=''">
				and bgb.goods_state = #{goodsState}
			</if>
			<if test="key != null and key !=''">
				and bgb.goods_name LIKE concat(concat('%',#{key}),'%')
			</if>
			<if test="brandCategoryId != null and brandCategoryId !=''">
				and bgb.goods_category_id  in ( select id from biz_goods_category where id = #{brandCategoryId} or pid = #{brandCategoryId} ) 
			</if>
			group by bgb.id  having minprice &gt; 0
			<if test="minPrice != null and minPrice !=''">
				and maxprice &gt;= #{minPrice}
			</if>
			<if test="maxPrice != null and maxPrice !=''">
				and minprice &lt;= #{maxPrice}
			</if>
			) as table1
		) 
	
	</select>
	
	<select id="countTotal" resultType="int" parameterType="java.util.Map">
		select
		count(1)
		from biz_goods_base
		<where>
			<if test="brandId !=null and brandId !=''">  
                 AND brand_id = #{brandId}  
            </if> 
            <if test="goodsCategoryId != null and goodsCategoryId !=''">  
                 AND goods_category_id = #{goodsCategoryId}  
            </if> 
            <if test="goodsStyleId !=null and goodsStyleId !=''">  
                 AND goods_style_id = #{goodsStyleId}  
            </if> 
            <if test="have3d !=null and have3d !=''">  
                 AND have_3d = #{have3d}  
            </if> 
            <if test="key !=null and key !=''">  
                 AND goods_name LIKE concat(concat('%',#{key}),'%')
            </if> 
		</where>
	</select>
	
	<select id="queryList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from biz_goods_base
		<where>
			<if test="keyword!=null and keyword !=''">  
                 AND goods_name like #{keyword}  
            </if> 
		</where>
		<if test="page > -1">
			limit #{page},#{pageSize}
		</if>
		
	</select>
	
	<select id="queryTotal" 
		resultType="java.lang.Integer">
		select count(*)
		from biz_goods_base
		<where>
			<if test="keyword!=null and keyword !=''">  
                AND goods_name like #{keyword}  
            </if>  
		</where>
	</select>
	
	<select id="getAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from biz_goods_base
	</select>
	
	<select id="getAllExt" resultMap="BizGoodsBaseExt">
		select
		<include refid="Base_Column_List" />
		,
		(select style_name from biz_goods_style bgs where bgs.id = bgb.goods_style_id) as goods_style_name,
		(select category_name from biz_goods_category bgc where bgc.id = bgb.goods_category_id) as goods_category_name,
		(select brand_name from bas_goods_brand bgbr where bgbr.brand_id = bgb.brand_id) as brand_name
		from biz_goods_base bgb
	</select>

	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from biz_goods_base
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from biz_goods_base
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.quantum.engine.homy.model.BizGoodsBase" keyProperty="id"
		useGeneratedKeys="true">
		insert into biz_goods_base ( goods_name, goods_no,
		goods_type_number, goods_icon, have_3d,
		create_time, create_id, modify_time,
		modify_id, goods_category_id, goods_style_id, 
		goods_state , default_price ,brand_id,goods_desc)
		values ( #{goodsName,jdbcType=VARCHAR},
		#{goodsNo,jdbcType=VARCHAR},
		#{goodsTypeNumber,jdbcType=VARCHAR}, #{goodsIcon,jdbcType=VARCHAR}, #{have3d,jdbcType=SMALLINT},
		#{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER},
		#{modifyTime,jdbcType=TIMESTAMP},
		#{modifyId,jdbcType=INTEGER}, #{goodsCategoryId,jdbcType=INTEGER},
		#{goodsStyleId,jdbcType=INTEGER},#{goodsState,jdbcType=INTEGER},
		#{defaultPrice,jdbcType=INTEGER},#{brandId,jdbcType=INTEGER},
		#{goodsDesc,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.quantum.engine.homy.model.BizGoodsBase" keyProperty="id"
		useGeneratedKeys="true">
		insert into biz_goods_base
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="goodsName != null">
				goods_name,
			</if>
			<if test="goodsNo != null">
				goods_no,
			</if>
			<if test="goodsTypeNumber != null">
				goods_type_number,
			</if>
			<if test="goodsIcon != null">
				goods_icon,
			</if>
			<if test="have3d != null">
				have_3d,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
			<if test="modifyId != null">
				modify_id,
			</if>
			<if test="goodsCategoryId != null">
				goods_category_id,
			</if>
			<if test="goodsStyleId != null">
				goods_style_id,
			</if>
			<if test="goodsState != null">
				goods_state,
			</if>
			<if test="defaultPrice != null">
				default_price,
			</if>
			<if test="brandId != null">
				brand_id,
			</if>
			<if test="goodsDesc != null">
				goods_desc,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="goodsName != null">
				#{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="goodsNo != null">
				#{goodsNo,jdbcType=VARCHAR},
			</if>
			<if test="goodsTypeNumber != null">
				#{goodsTypeNumber,jdbcType=VARCHAR},
			</if>
			<if test="goodsIcon != null">
				#{goodsIcon,jdbcType=VARCHAR},
			</if>
			<if test="have3d != null">
				#{have3d,jdbcType=SMALLINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=INTEGER},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyId != null">
				#{modifyId,jdbcType=INTEGER},
			</if>
			<if test="goodsCategoryId != null">
				#{goodsCategoryId,jdbcType=INTEGER},
			</if>
			<if test="goodsStyleId != null">
				#{goodsStyleId,jdbcType=INTEGER},
			</if>
			<if test="goodsState != null">
				#{goodsState,jdbcType=INTEGER},
			</if>
			<if test="defaultPrice != null">
				#{defaultPrice,jdbcType=DOUBLE},
			</if>
			<if test="brandId != null">
				#{brandId,jdbcType=DOUBLE},
			</if>
			<if test="goodsDesc != null">
				#{goodsDesc,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.quantum.engine.homy.model.BizGoodsBase">
		update biz_goods_base
		<set>
			<if test="goodsName != null">
				goods_name = #{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="goodsNo != null">
				goods_no = #{goodsNo,jdbcType=VARCHAR},
			</if>
			<if test="goodsTypeNumber != null">
				goods_type_number = #{goodsTypeNumber,jdbcType=VARCHAR},
			</if>
			<if test="goodsIcon != null">
				goods_icon = #{goodsIcon,jdbcType=VARCHAR},
			</if>
			<if test="have3d != null">
				have_3d = #{have3d,jdbcType=SMALLINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=INTEGER},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyId != null">
				modify_id = #{modifyId,jdbcType=INTEGER},
			</if>
			<if test="goodsCategoryId != null">
				goods_category_id = #{goodsCategoryId,jdbcType=INTEGER},
			</if>
			<if test="brandId != null">
				brand_id = #{brandId,jdbcType=INTEGER},
			</if>
			<if test="goodsDesc != null">
				goods_desc = #{goodsDesc,jdbcType=VARCHAR},
			</if>
			<if test="goodsState != null">
				goods_state = #{goodsState,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.quantum.engine.homy.model.BizGoodsBase">
		update biz_goods_base
		set goods_name = #{goodsName,jdbcType=VARCHAR},
		goods_no = #{goodsNo,jdbcType=VARCHAR},
		goods_type_number = #{goodsTypeNumber,jdbcType=VARCHAR},
		goods_icon = #{goodsIcon,jdbcType=VARCHAR},
		have_3d = #{have3d,jdbcType=SMALLINT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_id = #{createId,jdbcType=INTEGER},
		modify_time = #{modifyTime,jdbcType=TIMESTAMP},
		modify_id = #{modifyId,jdbcType=INTEGER},
		goods_category_id = #{goodsCategoryId,jdbcType=INTEGER},
		goods_category_id = #{goodsCategoryId,jdbcType=INTEGER},
		goods_style_id = #{goodsStyleId,jdbcType=INTEGER},
		goods_desc = #{goodsDesc,jdbcType=VARCHAR},
		goods_state = #{goodsState,jdbcType=INTEGER},
		default_price = #{defaultPrice,jdbcType=DOUBLE}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>