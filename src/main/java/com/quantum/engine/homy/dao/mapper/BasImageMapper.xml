<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantum.engine.homy.dao.BasImageMapper">
	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache" /> -->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />

	<resultMap id="BaseResultMap" type="com.quantum.engine.homy.model.BasImage">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="type" jdbcType="SMALLINT" property="type" />
		<result column="image_path" jdbcType="VARCHAR" property="imagePath" />
		<result column="image_size" jdbcType="BIGINT" property="imageSize" />
		<result column="suffix" jdbcType="VARCHAR" property="suffix" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_id" jdbcType="INTEGER" property="createId" />
		<result column="goods_id" jdbcType="INTEGER" property="goodsId" />
		<result column="review_id" jdbcType="INTEGER" property="reviewId" />
		<result column="refund_id" jdbcType="INTEGER" property="refundId" />
	</resultMap>
	<sql id="Base_Column_List">
		id, type, image_path, image_size, suffix, create_time, create_id , goods_id, review_id, refund_id
	</sql>
	<select id="getPathByReviewId" parameterType="java.lang.Integer" resultType="java.lang.String">
		select image_path from bas_image where review_id = #{reviewId}
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from bas_image
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="getByGoodsId" parameterType="int" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from bas_image
		where goods_id = #{id,jdbcType=INTEGER}
		order by type
	</select>
	
	<delete id="deleteByGoodsId" parameterType="java.lang.Integer">
		delete from bas_image
		where goods_id = #{goodsId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from bas_image
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.quantum.engine.homy.model.BasImage" keyProperty="id"
		useGeneratedKeys="true">
		insert into bas_image ( type, image_path,
		image_size, suffix, create_time,
		create_id , goods_id, review_id, refund_id)
		values ( #{type,jdbcType=SMALLINT},
		#{imagePath,jdbcType=VARCHAR},
		#{imageSize,jdbcType=BIGINT}, #{suffix,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{createId,jdbcType=INTEGER},#{goodsId,jdbcType=INTEGER}, #{reviewId,jdbcType=INTEGER}, #{refundId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.quantum.engine.homy.model.BasImage" keyProperty="id"
		useGeneratedKeys="true">
		insert into bas_image
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="type != null">
				type,
			</if>
			<if test="imagePath != null">
				image_path,
			</if>
			<if test="imageSize != null">
				image_size,
			</if>
			<if test="suffix != null">
				suffix,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="goodsId != null">
				goods_id,
			</if>
			<if test="reviewId != null">
				review_id,
			</if>
			<if test="refundId != null">
				refund_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="type != null">
				#{type,jdbcType=SMALLINT},
			</if>
			<if test="imagePath != null">
				#{imagePath,jdbcType=VARCHAR},
			</if>
			<if test="imageSize != null">
				#{imageSize,jdbcType=BIGINT},
			</if>
			<if test="suffix != null">
				#{suffix,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=INTEGER},
			</if>
			<if test="goodsId != null">
				#{goodsId,jdbcType=INTEGER},
			</if>
			<if test="reviewId != null">
				#{reviewId,jdbcType=INTEGER},
			</if>
			<if test="refundId != null">
				#{refundId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.quantum.engine.homy.model.BasImage">
		update bas_image
		<set>
			<if test="type != null">
				type = #{type,jdbcType=SMALLINT},
			</if>
			<if test="imagePath != null">
				image_path = #{imagePath,jdbcType=VARCHAR},
			</if>
			<if test="imageSize != null">
				image_size = #{imageSize,jdbcType=BIGINT},
			</if>
			<if test="suffix != null">
				suffix = #{suffix,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=INTEGER},
			</if>
			<if test="goodsId != null">
				goods_id = #{goodsId,jdbcType=INTEGER},
			</if>
			<if test="reviewId != null">
				review_id = #{reviewId,jdbcType=INTEGER},
			</if>
			<if test="refundId != null">
				refund_id = #{refundId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.quantum.engine.homy.model.BasImage">
		update bas_image
		set type = #{type,jdbcType=SMALLINT},
		image_path = #{imagePath,jdbcType=VARCHAR},
		image_size = #{imageSize,jdbcType=BIGINT},
		suffix = #{suffix,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_id = #{createId,jdbcType=INTEGER},
		goods_id = #{goodsId,jdbcType=INTEGER},
		review_id = #{reviewId,jdbcType=INTEGER},
		refund_id = #{refundId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>