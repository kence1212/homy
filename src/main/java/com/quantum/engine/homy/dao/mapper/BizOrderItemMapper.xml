<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantum.engine.homy.dao.BizOrderItemMapper">
  <resultMap id="BaseResultMap" type="com.quantum.engine.homy.model.BizOrderItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_sku_id" jdbcType="INTEGER" property="goodsSkuId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.quantum.engine.homy.model.BizOrderItem">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithSku" type="com.quantum.engine.homy.model.ext.BizOrderItemExt">
  	<association property="bizGoodsSku" column="goods_sku_id" select="com.quantum.engine.homy.dao.BizGoodsSkuMapper.getWithPropertiesNameById"></association>
  </resultMap>
  
  
  <sql id="Base_Column_List">
    id, user_id, goods_id, goods_sku_id, num, create_time, price, state, finish_time, 
    order_id
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  
  <select id="getIdByOrderId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select id from biz_order_item where order_id = #{orderId}
  
  </select>
  <select id="selectByOrderId" parameterType="java.lang.Integer" resultMap="ResultMapWithSku">
    select 
    <include refid="Base_Column_List" />
    from biz_order_item
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_order_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biz_order_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.quantum.engine.homy.model.BizOrderItem">
    insert into biz_order_item (id, user_id, goods_id, 
      goods_sku_id, num, create_time, 
      price, state, finish_time, 
      order_id, remark)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{goodsSkuId,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{price,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{orderId,jdbcType=INTEGER}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quantum.engine.homy.model.BizOrderItem">
    insert into biz_order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsSkuId != null">
        goods_sku_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsSkuId != null">
        #{goodsSkuId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quantum.engine.homy.model.BizOrderItem">
    update biz_order_item
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsSkuId != null">
        goods_sku_id = #{goodsSkuId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.quantum.engine.homy.model.BizOrderItem">
    update biz_order_item
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_sku_id = #{goodsSkuId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="setStateByOrderId" >
    update biz_order_item
    set 
      state = #{state}
    where order_id = #{orderId}
  </update>
  <update id="setState" >
    update biz_order_item
    set 
      state = #{state}
    where id = #{id}
  </update>
  
  <update id="updateStateByOrderId">
  	update biz_order_item
    set 
      state = #{state}
    where order_id = #{orderId}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.quantum.engine.homy.model.BizOrderItem">
    update biz_order_item
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_sku_id = #{goodsSkuId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>